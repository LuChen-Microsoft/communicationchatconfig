export declare const $lib: import("@typespec/compiler").TypeSpecLibrary<{
    "client-name": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "client-service": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "unknown-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "incorrect-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "union-null": {
        default: string;
    };
    "union-unsupported": {
        default: string;
        null: string;
    };
    "use-enum-instead": {
        default: string;
    };
    access: {
        default: string;
    };
    "invalid-usage": {
        default: string;
    };
    "invalid-encode": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "conflicting-multipart-model-usage": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "discriminator-not-constant": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "discriminator-not-string": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "wrong-client-decorator": {
        default: string;
    };
    "encoding-multipart-bytes": {
        default: string;
    };
    "unsupported-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "multiple-services": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "server-param-not-path": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "unexpected-http-param-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "multiple-response-types": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "no-corresponding-method-param": {
        default: string;
    };
    "unsupported-protocol": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "no-emitter-name": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
}, Record<string, any>, never>;
declare const reportDiagnostic: <C extends "client-name" | "client-service" | "unknown-client-format" | "incorrect-client-format" | "union-null" | "union-unsupported" | "use-enum-instead" | "access" | "invalid-usage" | "invalid-encode" | "conflicting-multipart-model-usage" | "discriminator-not-constant" | "discriminator-not-string" | "wrong-client-decorator" | "encoding-multipart-bytes" | "unsupported-kind" | "multiple-services" | "server-param-not-path" | "unexpected-http-param-type" | "multiple-response-types" | "no-corresponding-method-param" | "unsupported-protocol" | "no-emitter-name", M extends keyof {
    "client-name": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "client-service": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "unknown-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "incorrect-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "union-null": {
        default: string;
    };
    "union-unsupported": {
        default: string;
        null: string;
    };
    "use-enum-instead": {
        default: string;
    };
    access: {
        default: string;
    };
    "invalid-usage": {
        default: string;
    };
    "invalid-encode": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "conflicting-multipart-model-usage": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "discriminator-not-constant": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "discriminator-not-string": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "wrong-client-decorator": {
        default: string;
    };
    "encoding-multipart-bytes": {
        default: string;
    };
    "unsupported-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "multiple-services": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "server-param-not-path": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "unexpected-http-param-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "multiple-response-types": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "no-corresponding-method-param": {
        default: string;
    };
    "unsupported-protocol": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "no-emitter-name": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
}[C]>(program: import("@typespec/compiler").Program, diag: import("@typespec/compiler").DiagnosticReport<{
    "client-name": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "client-service": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "unknown-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "incorrect-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "union-null": {
        default: string;
    };
    "union-unsupported": {
        default: string;
        null: string;
    };
    "use-enum-instead": {
        default: string;
    };
    access: {
        default: string;
    };
    "invalid-usage": {
        default: string;
    };
    "invalid-encode": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "conflicting-multipart-model-usage": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "discriminator-not-constant": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "discriminator-not-string": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "wrong-client-decorator": {
        default: string;
    };
    "encoding-multipart-bytes": {
        default: string;
    };
    "unsupported-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "multiple-services": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "server-param-not-path": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "unexpected-http-param-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "multiple-response-types": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "no-corresponding-method-param": {
        default: string;
    };
    "unsupported-protocol": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "no-emitter-name": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
}, C, M>) => void, createDiagnostic: <C extends "client-name" | "client-service" | "unknown-client-format" | "incorrect-client-format" | "union-null" | "union-unsupported" | "use-enum-instead" | "access" | "invalid-usage" | "invalid-encode" | "conflicting-multipart-model-usage" | "discriminator-not-constant" | "discriminator-not-string" | "wrong-client-decorator" | "encoding-multipart-bytes" | "unsupported-kind" | "multiple-services" | "server-param-not-path" | "unexpected-http-param-type" | "multiple-response-types" | "no-corresponding-method-param" | "unsupported-protocol" | "no-emitter-name", M extends keyof {
    "client-name": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "client-service": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "unknown-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "incorrect-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "union-null": {
        default: string;
    };
    "union-unsupported": {
        default: string;
        null: string;
    };
    "use-enum-instead": {
        default: string;
    };
    access: {
        default: string;
    };
    "invalid-usage": {
        default: string;
    };
    "invalid-encode": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "conflicting-multipart-model-usage": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "discriminator-not-constant": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "discriminator-not-string": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "wrong-client-decorator": {
        default: string;
    };
    "encoding-multipart-bytes": {
        default: string;
    };
    "unsupported-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "multiple-services": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "server-param-not-path": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "unexpected-http-param-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "multiple-response-types": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "no-corresponding-method-param": {
        default: string;
    };
    "unsupported-protocol": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "no-emitter-name": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
}[C]>(diag: import("@typespec/compiler").DiagnosticReport<{
    "client-name": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "client-service": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "unknown-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "incorrect-client-format": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "union-null": {
        default: string;
    };
    "union-unsupported": {
        default: string;
        null: string;
    };
    "use-enum-instead": {
        default: string;
    };
    access: {
        default: string;
    };
    "invalid-usage": {
        default: string;
    };
    "invalid-encode": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "conflicting-multipart-model-usage": {
        default: string;
        wrongType: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "discriminator-not-constant": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "discriminator-not-string": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "wrong-client-decorator": {
        default: string;
    };
    "encoding-multipart-bytes": {
        default: string;
    };
    "unsupported-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "multiple-services": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "server-param-not-path": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "unexpected-http-param-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "multiple-response-types": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "no-corresponding-method-param": {
        default: string;
    };
    "unsupported-protocol": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "no-emitter-name": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
}, C, M>) => import("@typespec/compiler").Diagnostic, createStateSymbol: (name: string) => symbol;
export { createDiagnostic, createStateSymbol, reportDiagnostic };
//# sourceMappingURL=lib.d.ts.map